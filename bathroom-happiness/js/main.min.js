var isMobile = {
    Windows: function() {
        return /IEMobile/i.test(navigator.userAgent);
    },
    Android: function() {
        return /Android/i.test(navigator.userAgent);
    },
    BlackBerry: function() {
        return /BlackBerry/i.test(navigator.userAgent);
    },
    iOS: function() {
        return /iPhone|iPad|iPod/i.test(navigator.userAgent);
    },
    any: function() {
        return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Windows();
    }
}, deviceMobile = isMobile.any(), isIE = function() {
    var sAgent = window.navigator.userAgent, Idx = sAgent.indexOf("MSIE");
    // If IE, return version number.
    // If IE, return version number.
    return Idx > 0 ? parseInt(sAgent.substring(Idx + 5, sAgent.indexOf(".", Idx))) : navigator.userAgent.match(/Trident\/7\./) ? 11 : !1;
}, ieV = isIE(), playerManager = {
    players: {},
    holdingList: [],
    active: "",
    status: "",
    activate: function(container) {
        this.active = container;
    },
    getActive: function() {
        return this.players[this.active];
    },
    add: function(player, settings) {
        this.players[settings.container] = {
            player: player,
            settings: settings
        };
    },
    addHoldingList: function(settings) {
        this.holdingList.push(settings);
    },
    getNextHoldingList: function() {
        return this.holdingList.length > 0 ? this.holdingList[0] : !1;
    },
    removeHoldingList: function() {
        this.holdingList.shift();
    },
    loadNext: function() {
        var next = this.getNextHoldingList();
        if (next !== !1) {
            var nextPlayer = new player();
            nextPlayer.init(next), this.removeHoldingList();
        }
    },
    update: function(container, settings) {
        this.players[settings.container].settings = settings;
    },
    play: function(container, mute) {
        if (this.exists(container)) {
            playerManager.activate(container);
            var video = this.players[container].player;
            "undefined" != typeof mute && (this.players[container].settings.mute = mute);
            var settings = this.players[container].settings;
            "undefined" != typeof video.playVideo && (1 == settings.mute ? video.mute() : 0 === settings.mute && video.unMute(), 
            $(window).scrollTop() <= $("#" + container).offset().top + $("#" + container).outerHeight() && video.playVideo());
        }
    },
    pause: function(container) {
        if (this.exists(container)) {
            var video = this.players[container].player;
            "undefined" != typeof video.pauseVideo && video.pauseVideo();
        }
    },
    stop: function(container) {
        if (this.exists(container)) {
            var video = this.players[container].player;
            "undefined" != typeof video.stopVideo ? video.stopVideo() : this.getActive().settings.autoplay = !1, 
            "function" == typeof this.players[container].settings.onStop && this.players[container].settings.onStop();
        }
    },
    mute: function(container) {
        if (this.exists(container)) {
            var video = this.players[container].player;
            video.mute();
        }
    },
    unmute: function(container) {
        if (this.exists(container)) {
            var video = this.players[container].player;
            video.unMute();
        }
    },
    onChangeState: function(event) {
        var id = event.target.c.id, current = this.players[id];
        event.data === YT.PlayerState.ENDED && 1 == current.settings.loop && this.players[current.settings.container].player.playVideo(), 
        event.data === YT.PlayerState.PLAYING && "function" == typeof current.settings.onPlaying && current.settings.onPlaying(), 
        event.data === YT.PlayerState.PAUSED && "function" == typeof current.settings.onPaused && current.settings.onPaused(), 
        event.data === YT.PlayerState.BUFFERING && "function" == typeof current.settings.onBuffering && current.settings.onBuffering(), 
        event.data === YT.PlayerState.ENDED && "function" == typeof current.settings.onEnded && current.settings.onEnded();
    },
    exists: function(container) {
        return "undefined" != typeof this.players[container] ? !0 : !1;
    },
    remove: function(container) {}
}, player = function() {
    this.settings = {
        container: "",
        videoId: "",
        playerVars: {
            showinfo: 0,
            modestbranding: 0,
            rel: 0,
            origin: "http://reece-responsive.local"
        },
        autoplay: !1,
        loop: !1,
        mute: !1,
        onReady: function() {},
        onEnded: function() {},
        onPaused: function() {},
        onBuffering: function() {},
        onPlaying: function() {}
    }, this.ready = !1, this.obj = {}, this.init = function(settings) {
        if ("loading" == playerManager.status) playerManager.addHoldingList(settings); else {
            settings.playerVars = $.extend({}, this.settings.playerVars, settings.playerVars), 
            this.settings = $.extend({}, this.settings, settings);
            var initialPlayer = this;
            if ("undefined" == typeof YT || "undefined" == typeof YT.Player) {
                playerManager.status = "loading", window.onYouTubeIframeAPIReady = function() {
                    playerManager.add(initialPlayer.loadPlayer(), settings);
                };
                //This code loads the IFrame Player API code asynchronously.
                var tag = document.createElement("script");
                tag.src = "https://www.youtube.com/iframe_api";
                var firstScriptTag = document.getElementsByTagName("script")[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            } else playerManager.exists(this.settings.container) ? (playerManager.update(this.settings.container, settings), 
            settings.autoplay && playerManager.play(this.settings.container)) : (playerManager.status = "loading", 
            playerManager.add(this.loadPlayer(), settings));
        }
    }, this.loadPlayer = function() {
        playerManager.activate(this.settings.container);
        var container = this.settings.container, thisSettings = this.settings, defaults = {
            videoId: this.settings.videoId,
            width: 790,
            height: 444,
            playerVars: this.settings.playerVars,
            events: {
                onReady: function(event) {
                    //var id = event.target.c.id;
                    playerManager.players[container];
                    if (thisSettings.autoplay && !deviceMobile && ("undefined" != typeof thisSettings.mute ? playerManager.play(container, thisSettings.mute) : playerManager.play(container)), 
                    "function" == typeof thisSettings.onReady) {
                        var ready = thisSettings.onReady;
                        setTimeout(function() {
                            ready(container);
                        }, 500);
                    }
                    playerManager.status = "ready", playerManager.loadNext(), $(window).resize();
                },
                onStateChange: function(event) {
                    playerManager.onChangeState(event);
                }
            }
        };
        return new YT.Player(this.settings.container, defaults);
    }, this.play = function(id, mute) {
        var video = player.obj[id].player;
        "undefined" != typeof video.playVideo && ("undefined" != typeof mute && mute && video.mute(), 
        video.playVideo());
    }, this.stop = function(id) {
        var $this = this;
        if ("undefined" != typeof id) {
            var video = player.obj[id].player;
            "undefined" != typeof video.stopVideo ? video.stopVideo() : $this.autoplay = !1;
        } else $.each($this.obj, function(key) {
            "undefined" != typeof $this.obj[key].player.stopVideo && $this.obj[key].player.stopVideo();
        });
    };
}, bathroomHappiness = {
    init: function() {
        1 == isMobile.any() ? $("body").addClass("mobile") : $("body").addClass("desktop"), 
        $("body").hasClass("homepage") && this.homepage(), $("body").hasClass("inspiration") && this.inspiration(), 
        $("body").hasClass("trends") && this.trends(), $("body").hasClass("water-therapy") && this.waterTherapy();
    },
    homepage: function() {
        $(".subscribe-form").validate(), $(".panel-slideshow").each(function() {
            var $arrows = $(this).find(".slideshow-buttons");
            $(this).find(".slideshow-container").slick({
                appendArrows: $arrows,
                responsive: [ {
                    breakpoint: 768,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2,
                        infinite: !0
                    }
                }, {
                    breakpoint: 460,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        infinite: !0
                    }
                } ]
            });
        }), $(".panel-slideshow").each(function() {
            var section = $(this).data("section");
            $(this).find(".slideshow-container a").on("mouseover", function() {
                $("." + section).addClass("hover");
            }).on("mouseout", function() {
                $("." + section).removeClass("hover");
            });
        });
    },
    inspiration: function() {
        var video = $(".block.water-therapy .video").data("video");
        // When the player is ready, add listeners for pause, finish, and playProgress
        if ($(window).on("resize", function() {
            var height = $(".blocks .water-therapy .content").height(), width = 16 * height / 9;
            $("#water-therapy-video").width(width), $("#water-therapy-video").height(height + 200);
        }).resize(), isMobile.any()) $("#water-therapy-video").parent().addClass("ready"), 
        isMobile.any() && $("#water-therapy-video").remove(); else {
            var player_container = "water-therapy-video";
            if (video) {
                var vars = {
                    showinfo: 0,
                    modestbranding: 0,
                    rel: 0
                }, inspPlayer = new player();
                inspPlayer.init({
                    container: player_container,
                    videoId: video,
                    autoplay: 1,
                    mute: 1,
                    loop: 1,
                    onReady: function() {
                        $("#water-therapy-video").parent().parent().parent().addClass("ready"), $("#water-therapy-video").parent().addClass("ready");
                    },
                    playerVars: vars
                });
            }
        }
    },
    trends: function() {
        var windowWidth = $(window).width(), frameWidth = 588, animate = !0;
        $(window).on("resize", function() {
            windowWidth = $(window).width(), frameWidth = 588, 1200 > windowWidth && windowWidth > 991 ? frameWidth = 459 : 992 > windowWidth && (frameWidth = 358), 
            deviceMobile && (animate = !1), 768 > windowWidth && (animate = !1);
        }).resize(), $(".bathroom-gallery .image").each(function() {
            var animation;
            $(this).on("mouseover", function() {
                if (animate) {
                    var frames = ($(this).find(".image img").attr("src"), 15), div = $(this).find(".animation"), direction = "right";
                    div.data("frame", 0), div.show(), clearInterval(animation), animation = setInterval(function() {
                        if (frame = 1 * div.data("frame"), "right" == direction) var frameOffset = ++frame % frames * -frameWidth; else var frameOffset = --frame % frames * -frameWidth;
                        div.data("frame", frame), 14 == frame ? direction = "left" : 0 == frame && (direction = "right"), 
                        div.css({
                            "background-position": frameOffset + "px 0px"
                        });
                    }, 200);
                }
            }).on("mouseout", function() {
                if (animate) {
                    var frames = 15, div = $(this).find(".animation"), frame = 1 * div.data("frame");
                    frame > 0 ? (clearInterval(animation), animation = setInterval(function() {
                        frame = 1 * div.data("frame");
                        var frameOffset = --frame % frames * -frameWidth;
                        0 == frame && (clearInterval(animation), div.hide()), div.data("frame", frame), 
                        div.css({
                            "background-position": frameOffset + "px 0px"
                        });
                    }, 50)) : (clearInterval(animation), div.css({
                        "background-position": "0px 0px"
                    }), div.hide());
                }
            });
        });
    },
    waterTherapy: function() {
        // When the player is ready, add listeners for pause, finish, and playProgress
        var windowWidth = $(window).width();
        if (deviceMobile) $("#water-therapy-video").addClass("ready"), isMobile.any() && $("#water-therapy-video").remove(), 
        $("#water-therapy-rejuvenation-video").addClass("ready"), isMobile.any() && $("#water-therapy-rejuvenation-video").remove(); else for (var initialVideoLoad = [ "water-therapy", "water-therapy-rejuvenation", "water-therapy-relaxation", "water-therapy-therapeutic", "st-waterfall" ], k = 0; k < initialVideoLoad.length; k++) {
            var player_container = initialVideoLoad[k] + "-video", video = $("#" + initialVideoLoad[k] + "-video-wrap").data("video");
            if (video) {
                var vars = {
                    showinfo: 0,
                    modestbranding: 0,
                    rel: 0,
                    controls: 0
                }, autoplay = 0, mute = 0;
                "water-therapy" == initialVideoLoad[k] && (autoplay = 1, mute = 1), "water-therapy-rejuvenation" == initialVideoLoad[k] && (autoplay = 1, 
                mute = 1);
                var introPlayer = new player();
                introPlayer.init({
                    container: player_container,
                    videoId: video,
                    autoplay: autoplay,
                    loop: 1,
                    mute: mute,
                    onReady: function(container) {
                        "st-waterfall" !== container && ($("#" + container).parent().parent().addClass("ready"), 
                        $("#" + container).parent().addClass("ready"));
                    },
                    playerVars: vars
                });
            }
        }
        $("#banner .stop-full-video").on("click", function() {
            var player_container = "water-therapy-full-video";
            playerManager.stop(player_container), deviceMobile && $.magnificPopup.close(), $("#banner .banner").removeClass("playing"), 
            $("#banner .stop-full-video").removeClass("show"), $("#banner .play-full-video").removeClass("paused playing"), 
            $("#water-therapy-full-video").fadeOut(300, 0);
        }), $("#banner .play-full-video").on("click", function() {
            var player_container = "water-therapy-full-video";
            if ($("#banner .banner").addClass("playing"), $(this).hasClass("playing")) $(this).removeClass("playing"), 
            $(this).addClass("paused"), playerManager.pause(player_container); else {
                $("#banner .stop-full-video").addClass("show"), $(this).addClass("playing"), $("#water-therapy-full-video").show(), 
                ($(window).width() < 768 || deviceMobile) && $.magnificPopup.open({
                    mainClass: "mfp-water-therapy-full-video",
                    items: {
                        type: "inline",
                        src: "#full-video-popup"
                    },
                    callbacks: {
                        afterClose: function() {
                            $("#banner .banner").removeClass("playing"), $("#banner .stop-full-video").removeClass("show"), 
                            $("#banner .play-full-video").removeClass("paused playing"), $("#full-video-popup").addClass("hide"), 
                            player.stop("water-therapy-full-video");
                        }
                    }
                });
                var video = $(this).data("video");
                if (video) {
                    var vars = {
                        showinfo: 0,
                        modestbranding: 0,
                        rel: 0,
                        controls: 0
                    }, autoplay = 1;
                    ($(window).width() < 768 || deviceMobile) && (autoplay = 0);
                    var bannerVideo = new player();
                    bannerVideo.init({
                        container: player_container,
                        videoId: video,
                        autoplay: autoplay,
                        loop: !1,
                        onReady: function() {
                            $("#water-therapy-full-video").parent().addClass("ready");
                        },
                        onPlaying: function() {
                            $("#banner .play-full-video").addClass("playing"), $("#full-video-popup").removeClass("hide");
                            var active = $("#water-therapy").attr("class");
                            playerManager.pause("water-therapy-" + active + "-video");
                        },
                        onEnded: function() {
                            deviceMobile && $.magnificPopup.close();
                            var active = $("#water-therapy").attr("class"), mute = 1;
                            $("#water-therapy button.sound-on-off").hasClass("sound-on") && (mute = 0), playerManager.play("water-therapy-" + active + "-video", mute), 
                            $("#banner .banner").removeClass("playing"), $("#banner .stop-full-video").removeClass("show"), 
                            $("#banner .play-full-video").removeClass("paused playing"), $("#full-video-popup").addClass("hide");
                        },
                        onStop: function() {
                            var active = $("#water-therapy").attr("class");
                            $("#banner .banner").removeClass("playing");
                            var mute = 1;
                            $("#water-therapy button.sound-on-off").hasClass("sound-on") && (mute = 0), playerManager.play("water-therapy-" + active + "-video", mute);
                        },
                        onPaused: function() {
                            $("#banner .play-full-video").removeClass("paused playing"), $("#banner .play-full-video").addClass("paused");
                        },
                        playerVars: vars
                    }), $("#full-video-popup").removeClass("hide");
                }
            }
        }), $("#water-therapy button.sound-on-off").on("click", function() {
            $(this).toggleClass("sound-on sound-off");
            var section = $(".submenu li.active button").text().toLowerCase(), player_container = "water-therapy-" + section + "-video";
            $("#water-therapy button.sound-on-off").hasClass("sound-on") ? playerManager.unmute(player_container) : playerManager.mute(player_container);
        }), $(".submenu button").on("click", function() {
            $(".submenu li").removeClass("active"), $(this).parent().addClass("active");
            var section = $(this).text().toLowerCase(), topPosition = parseInt($("#intro .video-wrap").offset().top - 50);
            if (deviceMobile) $("html, body").animate({
                scrollTop: topPosition
            }, 500, function() {
                $("#water-therapy").attr("class", section);
            }); else {
                var player_container = "water-therapy-" + section + "-video", video = $("#" + player_container + "-wrap").data("video"), mute = 1;
                $("#water-therapy button.sound-on-off").hasClass("sound-on") && (mute = 0);
                var scrollMenuAnimation = function() {
                    if (video) {
                        playerManager.play(player_container, mute);
                    }
                    setTimeout(function() {
                        var sections = [ "rejuvenation", "relaxation", "therapeutic" ];
                        $.each(sections, function(key, val) {
                            val !== section && playerManager.pause("water-therapy-" + val + "-video");
                        });
                    }, 10);
                };
                topPosition == parseInt($(window).scrollTop()) ? ($("#water-therapy").attr("class", section), 
                scrollMenuAnimation()) : $("html, body").animate({
                    scrollTop: topPosition
                }, 500, function() {
                    $("#water-therapy").attr("class", section), scrollMenuAnimation();
                });
            }
        }), $("#water-therapy .slides").slick({
            arrows: !1,
            dots: !0
        }), $(".panel-slideshow").each(function() {
            var $arrows = $(this).find(".slideshow-buttons");
            $(this).find(".grid-module-slider").length > 0 && $(this).find(".grid-module-slider").slick({
                arrows: !0,
                dots: !1,
                appendArrows: $arrows
            }), $(this).find(".slideshow-container").length > 0 && $(this).find(".slideshow-container").each(function() {
                var slidesToShow = 1;
                $(this).data("slides") && (slidesToShow = parseInt($(this).data("slides"))), $(this).slick({
                    appendArrows: $arrows,
                    slidesToShow: slidesToShow,
                    slidesToScroll: slidesToShow,
                    dots: !0,
                    arrows: !1,
                    responsive: [ {
                        breakpoint: 991,
                        settings: {
                            slidesToShow: 2,
                            slidesToScroll: 2,
                            infinite: !0
                        }
                    }, {
                        breakpoint: 768,
                        settings: {
                            slidesToShow: 2,
                            slidesToScroll: 2,
                            infinite: !0
                        }
                    }, {
                        breakpoint: 460,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            infinite: !0
                        }
                    } ]
                });
            });
        }), $("#shower-technology .shower-technology-menu a").on("click", function() {
            $("#shower-technology .shower-technology-menu a").removeClass("active"), $("#shower-technology .shower-technology-description").removeClass("active"), 
            $(this).addClass("active");
            var section = $(this).data("section"), posTop = parseInt($("#shower-technology .shower-technology-cards").offset().top - 20);
            if (768 > windowWidth ? posTop == parseInt($(window).scrollTop()) ? ($("#shower-technology .shower-technology-card").removeClass("active"), 
            $("#shower-technology .st-" + section).addClass("active")) : $("html, body").animate({
                scrollTop: posTop
            }, 500, function() {
                $("#shower-technology .shower-technology-card").removeClass("active"), $("#shower-technology .st-" + section).addClass("active");
            }) : ($("#shower-technology .shower-technology-card").removeClass("active"), $("#shower-technology .st-" + section).addClass("active")), 
            "st" == playerManager.active.substring(0, 2) && playerManager.stop(playerManager.active), 
            playerManager.exists()) deviceMobile || playerManager.play("st-" + section + "video"); else {
                var video = $("#st-" + section + "-video-wrap").data("video"), container = "st-" + section + "-video", vars = {
                    showinfo: 0,
                    modestbranding: 0,
                    rel: 0,
                    controls: 0
                }, showerTechPlayer = new player();
                showerTechPlayer.init({
                    container: container,
                    videoId: video,
                    autoplay: 0,
                    loop: !1,
                    onReady: function(container) {
                        deviceMobile || playerManager.play(container);
                    },
                    onPlaying: function() {},
                    onEnded: function() {},
                    onPaused: function() {},
                    playerVars: vars
                });
            }
            return !1;
        }), $("#shower-technology .st-waterfall").addClass("active"), $("#shower-technology .view-video").on("click", function() {
            var section = $(this).data("section");
            return $("#shower-technology .st-" + section + " .shower-technology-description").toggleClass("active"), 
            deviceMobile || playerManager.play("st-" + section + "-video"), setTimeout(function() {
                $("#shower-technology .st-" + section + " .shower-technology-description .close-video").addClass("active");
            }, 500), !1;
        }), $("#shower-technology .close-video").on("click", function() {
            var section = $(this).data("section");
            return playerManager.stop("st-" + section + "-video"), $("#shower-technology .st-" + section + " .shower-technology-description .close-video").removeClass("active"), 
            $("#shower-technology .st-" + section + " .shower-technology-description").toggleClass("active"), 
            !1;
        });
        var currentSection = 1;
        if ($(window).on("resize", function() {
            $(".panel-slideshow").each(function() {});
            var width = $("#banner .banner").width(), height = 9 * width / 16;
            $("#water-therapy-video").width(width), $("#water-therapy-video").height(height), 
            //height = $('#banner .banner').height();
            //var width = 16 * height/9;
            deviceMobile ? (width = $(window).width(), height = $(window).height(), $("#water-therapy-full-video").height(height), 
            $("#water-therapy-full-video").width(width)) : ($("#water-therapy-full-video").height(height), 
            $("#water-therapy-full-video").width(width));
            var width = $("#water-therapy .videos").width(), height = 9 * width / 16;
            $("#water-therapy .videos iframe").width(width), $("#water-therapy .videos iframe").height(height), 
            windowWidth = $(window).width();
            var containerWidth = $(".grid-module-intro-wrap").width();
            if (768 > windowWidth) {
                var sections = $(".grid-module-zones-section").length;
                $(".grid-module-zones-sections").width(containerWidth * sections), $(".grid-module-zones-section").width(containerWidth), 
                height = $("#shower-technology .shower-technology-description .front").outerHeight(), 
                $("#shower-technology .shower-technology-cards, #shower-technology .shower-technology-description .shower-technology-flip, #shower-technology .shower-technology-description .back").height(height);
            } else $(".grid-module-zones-sections").width(""), $(".grid-module-zones-section").width("");
            $(".grid-module-zones-sections").each(function() {
                var s = 0;
                $(this).find(".grid-module-zones-section").each(function() {
                    $(this).find(".grid-module-zone-1 .grid-module-slider img").width(containerWidth), 
                    9 >= ieV ? $(this).css({
                        transform: "translate(" + -1 * s * containerWidth + "px,0)"
                    }) : $(this).css({
                        transform: "translate3d(" + -1 * s * containerWidth + "px,0,0)"
                    }), s += 1;
                });
            });
        }).resize(), ieV) {
            var lt = "";
            9 >= ieV && (lt = "ie-lt"), $(".grid-module-zones-section, .grid-module-zone-1, .grid-module-zone-2, .grid-module-zone-3, .shower-technology-card").addClass("ie " + lt);
        }
        $(".grid-module").each(function() {
            var $module = $(this);
            $(this).find(".grid-module-menu a, .scrolling-menu-list a").on("click", function() {
                var section = $(this).data("section");
                currentSection = section;
                var next = 1 * section + 1, prev = 1 * section - 1;
                $module.find(".grid-module-menu a, .scrolling-menu-list a").removeClass("active"), 
                $module.find(".grid-module-menu a[data-section=" + section + "], .scrolling-menu-list a[data-section=" + section + "]").addClass("active"), 
                $module.find(".scrolling-menu-list, .scrolling-menu-wrap").removeClass("active"), 
                next > $module.find(".grid-module-zones-section").length && (next = 1), 0 == prev && (prev = $module.find(".grid-module-zones-section").length);
                $module.find(".grid-module-intro-wrap").width();
                return parseInt($module.find(".grid-module-description").offset().top - 50) == parseInt($(window).scrollTop()) ? ($module.find(".grid-module-description .box-content").removeClass("active"), 
                $module.find(".grid-module-zones-section").removeClass("current prev next"), $module.find(".grid-module-zones-section-" + section).addClass("current"), 
                $module.find(".grid-module-zones-section-" + next).addClass("next"), $module.find(".grid-module-zones-section-" + prev).addClass("prev"), 
                $module.find(".grid-module-description .box-content-" + section).addClass("active")) : setTimeout(function() {
                    $("html, body").animate({
                        scrollTop: parseInt($module.find(".grid-module-description").offset().top - 50)
                    }, 500, function() {
                        $module.find(".grid-module-description .box-content").removeClass("active"), $module.find(".grid-module-zones-section").removeClass("current prev next"), 
                        $module.find(".grid-module-zones-section-" + section).addClass("current"), $module.find(".grid-module-zones-section-" + next).addClass("next"), 
                        $module.find(".grid-module-zones-section-" + prev).addClass("prev"), $module.find(".grid-module-description .box-content-" + section).addClass("active");
                    });
                }, 300), !1;
            }), $(this).find(".scrolling-menu-wrap .scrolling-menu").on("click", function() {
                $(".scrolling-menu-wrap .scrolling-menu-list, .scrolling-menu-wrap").toggleClass("active");
            });
        }), $(window).on("scroll", function() {
            var scrollTop = $(window).scrollTop();
            if (deviceMobile) scrollTop >= $(".submenu-wrap").offset().top && scrollTop <= $("#water-therapy-content .shower-image").offset().top ? ($(".submenu-wrap").height($(".submenu").height()), 
            $(".submenu").addClass("fixed")) : ($(".submenu-wrap").height(""), $(".submenu").removeClass("fixed")); else if (scrollTop >= $("#water-therapy-video-wrap").offset().top + $("#water-therapy-video-wrap").height() - 20 ? $("#water-therapy-video-wrap").hasClass("paused") || ($("#water-therapy-video-wrap").addClass("paused"), 
            playerManager.pause("water-therapy-video")) : $("#water-therapy-video-wrap").hasClass("paused") && ($("#water-therapy-video-wrap").removeClass("paused"), 
            playerManager.play("water-therapy-video")), scrollTop >= $("#water-therapy .videos").offset().top + $("#water-therapy .videos").height() - 20) $("#water-therapy .videos").hasClass("paused") || ($("#water-therapy .videos").addClass("paused"), 
            playerManager.pause("water-therapy-therapeutic-video"), playerManager.pause("water-therapy-relaxation-video"), 
            playerManager.pause("water-therapy-rejuvenation-video")); else if ($("#water-therapy .videos").hasClass("paused")) {
                $("#water-therapy .videos").removeClass("paused");
                var section = $("#water-therapy").attr("class"), mute = 1;
                $("#water-therapy button.sound-on-off").hasClass("sound-on") && (mute = 0), playerManager.play("water-therapy-" + section + "-video", mute);
            }
            $(".grid-module").each(function() {
                var menuTopOffset = $(this).find(".grid-module-menu").offset().top + $(this).find(".grid-module-menu").height() - 50, maxScroll = $(this).offset().top - 90 + $(this).outerHeight();
                scrollTop >= menuTopOffset ? scrollTop >= maxScroll ? ($(this).find(".scrolling-menu-wrap").removeClass("fixed"), 
                $(this).find(".scrolling-menu-list, .scrolling-menu-wrap").removeClass("active")) : $(this).find(".scrolling-menu-wrap").addClass("fixed") : ($(this).find(".scrolling-menu-wrap").removeClass("fixed"), 
                $(this).find(".scrolling-menu-list, .scrolling-menu-wrap").removeClass("active"));
            });
        });
    }
};

!function($) {
    $(function() {
        bathroomHappiness.init();
    });
}(jQuery);