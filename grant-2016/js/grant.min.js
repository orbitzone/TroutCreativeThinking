var grant={init:function(){this.countdown();new Masonry(".grid",{itemSelector:".grid-item"})},countdown:function(){
// Parse countdown string to an object
function a(a){var b=a.match(g),d={};return c.forEach(function(a,c){d[a]=b[c]}),d}
// Return the time components that diffs
function b(a,b){var d=[];return c.forEach(function(c){a[c]!==b[c]&&d.push(c)}),d}var c=["days","hours","minutes","seconds"],d=$("#countdown").data("date"),e="00:00:00:00:00",f="00:00:00:00:00",g=/([0-9]{2})/gi,h=a(e);c.forEach(function(a,b){$("#countdown").find("."+a+" .curr span").text(h[a]),$("#countdown").find("."+a+" .next span").text(h[a]),$("#countdown").find("."+a+" .label span").text(a)}),$("#countdown").css({opacity:1}),$("#countdown").countdown(d,function(c){var d,g=c.strftime("%D:%H:%M:%S");g!==f&&(e=f,f=g,
// Setup the data
d={curr:a(e),next:a(f)},
// Apply the new values to each node that changed
b(d.curr,d.next).forEach(function(a){var b=".%s".replace(/%s/,a),c=$("#countdown").find(b);
// Update the node
c.removeClass("flip"),c.find(".curr span").text(d.curr[a]),c.find(".next span").text(d.next[a]),
// Wait for a repaint to then flip
setTimeout(function(){c.addClass("flip")},50)}))})}};!function(a){a(function(){grant.init()})}(jQuery);